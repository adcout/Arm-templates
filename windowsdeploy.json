{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualMachineAdminUserName": {
            "defaultValue": "azuser",
            "type": "string",
            "metadata": {
                "description": "Administrator Username for the local admin account"
            }
        },
        "virtualMachineAdminPassword": {
            "defaultValue": null,
            "type": "securestring",
            "metadata": {
                "description": "Administrator password for the local admin account"
            }
        },
        "domainJoinUserName": {
            "type": "string",
            "metadata": {
                "description": "User name of a domain user with sufficient rights to perfom domain join operation."
            }
        },
        "domainJoinUserPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Domain user password"
            }
        },
        "domainFQDN": {
            "type": "string",
            "metadata": {
                "description": "Domain FQDN where the virtual machine will be joined"
            }
        },
        "ouPath": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: OU=testOU; DC=domain; DC=Domain; DC=com"
            }
        },
      
        "virtualMachineNamePrefix": {
            "defaultValue": "az",
            "type": "string",
            "maxLength": 15,
            "metadata": {
                "description": "Name of the virtual machine to be created"
                
                }
            },

        "virtualMachineNamePrefixNumber": {
                "type": "int",
                "metadata": {
                    "description": "Set the sequence number of virtual machine. limit = 800. Ex: vm name: azweb1 + sequence number = 2"
                }
            },
        "virtualMachineCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Number of  virtual machines to be created"
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_A2_v2",
            "allowedValues": [
                "Standard_A2_v2",
                "Standard_DS1_v2",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2"
            ],
            "metadata": {
                "description": "Virtual Machine Size"
            }
        },
        "operatingSystem": {
            "type": "string",
            "defaultValue": "Server2016",
            "metadata": {
                "description": "Operating System of the Server"
            },
            "allowedValues": [
                "Server2012R2",
                "Server2016"
            ]
        },
        "Tag - Project": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": ""
            }
        },
        "TAG - Tier": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": ""
            }
        },
        "TAG - Contact": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": ""
            }
        },
        "TAG - Cost Center": {
            "type": "int",
            "defaultValue": "",
            "metadata": {
                "description": ""
            }
        },
        "TAG - Enviroment": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": ""
            },
            "allowedValues": [
                "Prd",
                "Dev",
                "Hom"
            ]
        },
        "TAG - ShutdownVM": {
            "type": "string",
            "defaultValue": "No",
            "metadata": {
                "description": ""
            },
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "availabilitySetName": {
            "defaultValue": "az-as",
            "type": "string",
            "metadata": {
                "description": "Availability Set Name where the VM will be placed"
            }
        },
        "diagnosticsStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "The name of an existing storage account to which diagnostics data will be transferred."
            },
            "allowedValues": [
                "salogsnetwatcher"
            ]
        },
        "virtualNetworkRg": {
            "type": "string",
            "defaultValue": "Your NetworkRG"
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "Your VNET Name"
        },
        "subnetInside": {
            "type": "string",
            "defaultValue": "Your Subnet Name"
        }
    },
    "variables": {
        "operatingSystemValues": {
            "Server2012R2": {
                "PublisherValue": "MicrosoftWindowsServer",
                "OfferValue": "WindowsServer",
                "SkuValue": "2012-R2-Datacenter"
            },
            "Server2016": {
                "PublisherValue": "MicrosoftWindowsServer",
                "OfferValue": "WindowsServer",
                "SkuValue": "2016-Datacenter"
            }
        },
        "availabilitySetPlatformFaultDomainCount": "2",
        "availabilitySetPlatformUpdateDomainCount": "5",
        "vnetId": "[resourceId(parameters('virtualNetworkRg'),'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetInside'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[parameters('availabilitySetName')]",
            "apiVersion": "[providers('Microsoft.Compute', 'availabilitySets').apiVersions[0]]",
            "location": "[resourceGroup().location]",
            "tags": {
                "Project": "[parameters('Tag - Project')]",
                "Tier": "[parameters('TAG - Tier')]",
                "Contact By": "[parameters('TAG - Contact')]",
                "Cost Center Id": "[parameters('TAG - Cost Center')]",
                "Enviroment": "[parameters('TAG - Enviroment')]",
                "ShutdownVM": "[parameters('TAG - ShutdownVM')]"
            },
            "properties": {
                "platformFaultDomainCount": "[variables('availabilitySetPlatformFaultDomainCount')]",
                "platformUpdateDomainCount": "[variables('availabilitySetPlatformUpdateDomainCount')]"
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(parameters('virtualMachineNamePrefixNumber')))]",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "tags": {
                "Project": "[parameters('Tag - Project')]",
                "Tier": "[parameters('TAG - Tier')]",
                "Contact By": "[parameters('TAG - Contact')]",
                "Cost Center Id": "[parameters('TAG - Cost Center')]",
                "Enviroment": "[parameters('TAG - Enviroment')]",
                "ShutdownVM": "[parameters('TAG - ShutdownVM')]"
            },
            "copy": {
                "name": "VMcopy",
                "count": "[parameters('virtualMachineCount')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('operatingSystemValues')[parameters('operatingSystem')].PublisherValue]",
                        "offer": "[variables('operatingSystemValues')[parameters('operatingSystem')].OfferValue]",
                        "sku": "[variables('operatingSystemValues')[parameters('operatingSystem')].SkuValue]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('virtualMachineNamePrefix'),copyIndex(parameters('virtualMachineNamePrefixNumber')))]",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        },
                        "caching": "ReadWrite"
                    }
                },
                "osProfile": {
                    "computerName": "[concat(parameters('virtualMachineNamePrefix'),copyIndex(parameters('virtualMachineNamePrefixNumber')))]",
                    "adminUsername": "[parameters('virtualMachineAdminUserName')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true
                    },
                    "secrets": [],
                    "adminPassword": "[parameters('virtualMachineAdminPassword')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualMachineNamePrefix'), copyIndex(parameters('virtualMachineNamePrefixNumber')), '-NIC1'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('http://', parameters('diagnosticsStorageAccountName'), '.blob.core.windows.net')]"
                    }
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualMachineNamePrefix'), copyIndex(parameters('virtualMachineNamePrefixNumber')), '-NIC1'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(parameters('virtualMachineNamePrefixNumber')), '-NIC1')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "tags": {
                "Project": "[parameters('Tag - Project')]",
                "Tier": "[parameters('TAG - Tier')]",
                "Contact By": "[parameters('TAG - Contact')]",
                "Cost Center Id": "[parameters('TAG - Cost Center')]",
                "Enviroment": "[parameters('TAG - Enviroment')]",
                "ShutdownVM": "[parameters('TAG - ShutdownVM')]"
            },
            "copy": {
                "name": "NICCopy",
                "count": "[parameters('virtualMachineCount')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableIPForwarding": false
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(parameters('virtualMachineNamePrefixNumber')), '/joindomain')]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "VMJoinExtensionCopy",
                "count": "[parameters('virtualMachineCount')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineNamePrefix'), copyIndex(parameters('virtualMachineNamePrefixNumber'))))]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "JsonADDomainExtension",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "Name": "[parameters('domainFQDN')]",
                    "OUPath": "[parameters('ouPath')]",
                    "User": "[concat(parameters('domainFQDN'), '\\', parameters('domainJoinUserName'))]",
                    "Restart": "true",
                    "Options": "3"
                },
                "protectedSettings": {
                    "Password": "[parameters('domainJoinUserPassword')]"
                }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(parameters('virtualMachineNamePrefixNumber')), '/BGinfo')]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "VMBginfoExtensionCopy",
                "count": "[parameters('virtualMachineCount')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineNamePrefix'), copyIndex(parameters('virtualMachineNamePrefixNumber'))))]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "BGInfo",
                "typeHandlerVersion": "2.1",
                "settings": {},
                "protectedSettings": null
            }
        }
    ]
}